{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": { 
            "functionapp_name_prefix": {
               "type": "string"
        },
        /*Environment will override with pipeline output variable*/
              "environment": {
                  "type": "string",
                  "metadata": {
                  "description": "Name of the Environment to where we deploy the resource"
              }
        },
        /*Location will override with pipeline output variable*/
              "location_prefix": {
                   "type": "string",
                   "metadata": {
                   "description": "Location prefix used in the resource name"
             }
        },
      
        /*this will override with pipeline output variable*/
               "storageaccountname": {
                    "type": "string",
                    "metadata": {
                    "description": "Storage Account name"
            }
        },
        /*this will override with pipeline output variable*/
                "appinsightsname": {
                      "type": "String",
                      "metadata": {
                      "description": "App Insights Name"
            }
        },
               "asp_name_prefix":{
                   "type": "String"
           }
         
    },
    "variables": {
       /* "subscriptionID": "[subscription().subscriptionId]",
        "resourcegroupname": "[resourceGroup().name]", */
        "asp_name": "[concat(parameters('asp_name_prefix'), '-',parameters('environment'),'-',parameters('location_prefix'),'-', '001')]",
        "location": "[resourceGroup().location]",
        "functionapp_name": "[concat(parameters('functionapp_name_prefix'),'-',parameters('environment'),'-',parameters('location_prefix'), '-', '001')]"
    },

    "resources": [
      {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[variables('asp_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-06-01",
              "name": "[variables('functionapp_name')]",
              "location": "[variables('location')]",
              "kind": "functionapp",
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms/', variables('asp_name'))]"
              ],
              "identity": {
		          "type": "SystemAssigned"
	             },
              "properties": {
              "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('asp_name'))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageaccountname'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts',parameters('storageaccountname')), '2019-06-01').keys[0].value)]"
                    },
                    {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components', parameters('appinsightsname')), '2015-05-01').InstrumentationKey]"
                    },
                    {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('microsoft.insights/components', parameters('appinsightsname')), '2015-05-01').ConnectionString]"
                    },
                    {
                          "name": "FUNCTIONS_EXTENSION_VERSION",
                          "value": "~3"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    },
                    {
                        "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
                        "value": "true"
                    },
                    {
                       "name": "WEBSITE_RUN_FROM_PACKAGE",
                        "value": "1"
                    },

                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageaccountname'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts',parameters('storageaccountname')), '2019-06-01').keys[0].value)]"
                     },
                    {
                       "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower(variables('functionapp_name'))]"
                    },
                    {
                      "name": "StorageAccountName",
                      "value": "[parameters('storageaccountname')]"
                    },
                    {
                      "name": "containerKey",
                      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccountname')), '2019-04-01').keys[0].value]"
                    },
                    {
                      "name": "StorageAccountUrl",
                      "value": "[concat('https://',parameters('storageaccountname'),'.blob.core.windows.net')]"
                    },
                    {
                       "name": "profileBaseURL",
                      "value": "https://www.valmont.com/employee/profile/"
                    },
                     {
                       "name": "DataContainer",
                      "value": "qrcodes"
                    },
                    {
                       "name": "DataImageContainer",
                      "value": "images"
                    }
                     
                      
                  ]
                }
              }
              
            }
        
    ],
    "outputs": {}
}
