on:
  workflow_dispatch
  
name: AzureARMSample

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: azure/arm-deploy@v1
      id: storage  
      with:
        resourceGroupName: TestRG
        template: storageaccount/storage.json
        parameters: storageaccount/storage.parameters.json
        
    - name: get storage name
      run: echo "stg_name=${{ steps.deploy.outputs.storageacc_name }}" >>$GITHUB_ENV
    - name: print storage name
      run: echo my storage account name is ${{ env.stg_name }}
        
    - uses: azure/arm-deploy@v1
      id: workspace
      with:
        resourceGroupName: TestRG
        template: Logworkspace/workspace.json
        parameters: Logworkspace/workspace.parameters.json

    - name: get workspace name
      run: echo "workspace_name=${{ steps.workspace.outputs.workspace-name }}" >>$GITHUB_ENV

    - uses: azure/arm-deploy@v1
      id: appinsights
      with:
        resourceGroupName: TestRG
        template: Applicationinsights/appinsight.json
        parameters: Applicationinsights/appinsight.parameters.json logworkspacename=${{ env.workspace }}

    - name: get appinsights name
      run: echo "insights_name=${{ steps.appinsights.outputs.appinsightsname }}" >>$GITHUB_ENV

    - uses: azure/arm-deploy@v1
      id: functionapp
      with:
        resourceGroupName: TestRG
        template: Functionapp/functionapp.json
        parameters: Functionapp/functionapp.parameters.json appinsightsname=${{ env.insights_name }} storageaccountname=${{ env.stg_name }}

    - uses: azure/arm-deploy@v1
      id: APIM
      with:
        resourceGroupName: TestRG
        template: APIManagement/apim.json
        parameters: APIManagement/apim.parameters.json appinsights_name=${{ env.insights_name }}