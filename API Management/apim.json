{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apim_name_prefix": { 
             "type": "String",
             "metadata": {
             "description": "Apim Nmae prefix used in the resource name"
           }
        },
    /*Environment will override with pipeline variable*/
        "environment": {
            "type": "String",
            "metadata": {
            "description": "Name of the Environment to where we deploy the resource"
           }
        },
    /*Location will override with pipeline variable*/
        "location_prefix": {
             "type": "string",
             "metadata": {
             "description": "Location prefix used in the resource name"
           }
        },   
        /*This will override with pipeline variable*/    
         "appinsights_name": {
              "type": "string"
        }
        
      
    },
    "variables": {
        "apim_name": "[concat(parameters('apim_name_prefix'),'-', parameters('environment'), '-', parameters('location_prefix'), '-', '001' )]",
        "location": "[resourceGroup().location]"
       
    },
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2020-12-01",
            "name": "[variables('apim_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Developer",
                "capacity": 1
            },
             "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "publisherEmail": "Akash.Thambiran@valmont.com",
                "publisherName": "Valmont",
                "notificationSenderEmail": "apimgmt-noreply@mail.windowsazure.com",
                "hostnameConfigurations": [
                    {
                        "type": "Proxy",
                        "hostName": "[concat(variables('apim_name'), '.azure-api.net')]",
                        "negotiateClientCertificate": false,
                        "defaultSslBinding": true,
                        "certificateSource": "BuiltIn"
                    }
                ],
            
                "virtualNetworkType": "None",
                "disableGateway": false,
                "apiVersionConstraint": {},
                "publicNetworkAccess": "Enabled"
            }
            
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/echo-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "Echo API",
                "apiRevision": "1",
                "subscriptionRequired": true,
                "serviceUrl": "http://echoapi.cloudapp.net/api",
                "path": "echo",
                "protocols": [
                    "https"
                ],
                "authenticationSettings": {},
                "subscriptionKeyParameterNames": {
                    "header": "Ocp-Apim-Subscription-Key",
                    "query": "subscription-key"
                },
                "isCurrent": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-qrcode-dev-cus-001')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "QRCode Function App",
                "apiRevision": "1",
                "subscriptionRequired": true,
                "description": "Import from \"func-qrcode-dev-cus-001\" Function App",
                "path": "func-qrcode-dev-cus-001",
                "protocols": [
                    "https"
                ],
                "authenticationSettings": {},
                "subscriptionKeyParameterNames": {
                    "header": "Ocp-Apim-Subscription-Key",
                    "query": "subscription-key"
                },
                "isCurrent": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "Valmont mobile Function App",
                "apiRevision": "1",
                "subscriptionRequired": true,
                "description": "Import from \"func-valmontmobileapp-dev-cus-001\" Function App",
                "path": "func-valmontmobileapp-dev-cus-001",
                "protocols": [
                    "https"
                ],
                "authenticationSettings": {},
                "subscriptionKeyParameterNames": {
                    "header": "Ocp-Apim-Subscription-Key",
                    "query": "subscription-key"
                },
                "isCurrent": true
            }
        },
        
        
       {
            "type": "Microsoft.ApiManagement/service/loggers",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/',parameters('appinsights_name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "loggerType": "applicationInsights",
                "description": "Logger resources to APIM",
                "credentials": {
                    "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights_name')), '2015-05-01').InstrumentationKey]"
                },
                "isBuffered": true,
                "resourceId": "[resourceId('Microsoft.Insights/components', parameters('appinsights_name'))]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/namedValues",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-qrcode-dev-cus-001-key')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
           "displayName": "func-qrcode-dev-cus-001-key",
                "tags": [
                    "key",
                    "function",
                    "auto"
                ],
                "secret": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/namedValues",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001-key')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "func-valmontmobileapp-dev-cus-001-key",
                "tags": [
                    "key",
                    "function",
                    "auto"
                ],
                "secret": true
            }
        },
        
        {
            "type": "Microsoft.ApiManagement/service/apis/diagnostics",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-qrcode-dev-cus-001/applicationinsights')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-qrcode-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]",
                "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apim_name'), parameters('appinsights_name'))]"
            ],
            "properties": {
                "alwaysLog": "allErrors",
                "httpCorrelationProtocol": "W3C",
                "verbosity": "information",
                "logClientIp": true,
                "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apim_name'), parameters('appinsights_name'))]",
                "sampling": {
                    "samplingType": "fixed",
                    "percentage": 100
                },
                "frontend": {
                    "request": {
                        "headers": [
                            "x-correlation-id",
                            "X-Forwarded-For",
                            "x-ms-client-tracking-id",
                            "ErrorMessage",
                            "ErrorStatusCode"
                        ],
                        "body": {
                            "bytes": 8192
                        }
                    },
                    "response": {
                        "headers": [],
                        "body": {
                            "bytes": 0
                        }
                    }
                },
                "backend": {
                    "request": {
                        "headers": [
                            "x-correlation-id",
                            "X-Forwarded-For",
                            "x-ms-client-tracking-id",
                            "ErrorMessage",
                            "ErrorStatusCode"
                        ],
                        "body": {
                            "bytes": 8192
                        }
                    },
                    "response": {
                        "headers": [],
                        "body": {
                            "bytes": 0
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/diagnostics",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/applicationinsights')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]",
                "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apim_name'), parameters('appinsights_name'))]"
            ],
            "properties": {
                "alwaysLog": "allErrors",
                "httpCorrelationProtocol": "W3C",
                "verbosity": "information",
                "logClientIp": true,
                "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apim_name'), parameters('appinsights_name'))]",
                "sampling": {
                    "samplingType": "fixed",
                    "percentage": 100
                },
                "frontend": {
                    "request": {
                        "headers": [
                            "x-correlation-id",
                            "X-Forwarded-For",
                            "x-ms-client-tracking-id",
                            "ErrorMessage",
                            "ErrorStatusCode"
                        ],
                        "body": {
                            "bytes": 8192
                        }
                    },
                    "response": {
                        "headers": [],
                        "body": {
                            "bytes": 0
                        }
                    }
                },
                "backend": {
                    "request": {
                        "headers": [
                            "x-correlation-id",
                            "X-Forwarded-For",
                            "x-ms-client-tracking-id",
                            "ErrorStatusCode",
                            "ErrorMessage"
                        ],
                        "body": {
                            "bytes": 8192
                        }
                    },
                    "response": {
                        "headers": [],
                        "body": {
                            "bytes": 0
                        }
                    }
                }
            }
        },   
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/echo-api/create-resource')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "Create resource",
                "method": "POST",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "examples": {
                                "default": {
                                    "value": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
                                }
                            }
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-qrcode-dev-cus-001/get-generateqrcode')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-qrcode-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "GenerateQRCode",
                "method": "GET",
                "urlTemplate": "/GenerateQRCode",
                "templateParameters": [],
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/get-generateqrcode')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "GenerateQRCode",
                "method": "GET",
                "urlTemplate": "/GenerateQRCode",
                "templateParameters": [],
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/get-getallbusinesssegments')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "GetAllBusinessSegments",
                "method": "GET",
                "urlTemplate": "/GetAllBusinessSegments",
                "templateParameters": [],
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/get-getazureusers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "GetAzureUsers",
                "method": "GET",
                "urlTemplate": "/GetAzureUsers",
                "templateParameters": [],
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/get-getprofiledetailsfromstorage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "GetProfileDetailsfromStorage",
                "method": "GET",
                "urlTemplate": "/GetProfileDetailsfromStorage",
                "templateParameters": [],
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/echo-api/modify-resource')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "Modify Resource",
                "method": "PUT",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-qrcode-dev-cus-001/post-generateqrcode')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-qrcode-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "GenerateQRCode",
                "method": "POST",
                "urlTemplate": "/GenerateQRCode",
                "templateParameters": [],
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/post-generateqrcode')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "GenerateQRCode",
                "method": "POST",
                "urlTemplate": "/GenerateQRCode",
                "templateParameters": [],
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/post-getazureusers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "GetAzureUsers",
                "method": "POST",
                "urlTemplate": "/GetAzureUsers",
                "templateParameters": [],
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/post-getprofiledetailsfromstorage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "GetProfileDetailsfromStorage",
                "method": "POST",
                "urlTemplate": "/GetProfileDetailsfromStorage",
                "templateParameters": [],
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/put-updateuserprofile')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "UpdateUserProfile",
                "method": "PUT",
                "urlTemplate": "/UpdateUserProfile",
                "templateParameters": [],
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/echo-api/remove-resource')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "Remove resource",
                "method": "DELETE",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/echo-api/retrieve-header-only')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "Retrieve header only",
                "method": "HEAD",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/echo-api/retrieve-resource-cached')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "displayName": "Retrieve resource (cached)",
                "method": "GET",
                "urlTemplate": "/resource-cached",
                "templateParameters": [],
                "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "param1",
                            "description": "A sample parameter that is required and has a default value of \"sample\".",
                            "type": "string",
                            "defaultValue": "sample",
                            "required": true,
                            "values": [
                                "sample"
                            ]
                        },
                        {
                            "name": "param2",
                            "description": "Another sample parameter, set to not required.",
                            "type": "string",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/echo-api/create-resource/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'echo-api', 'create-resource')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <json-to-xml apply=\"always\" consider-accept-header=\"false\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/echo-api/retrieve-header-only/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'echo-api', 'retrieve-header-only')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <set-header name=\"X-My-Sample\" exists-action=\"override\">\r\n      <value>This is a sample</value>\r\n      <!-- for multiple headers with the same name add additional value elements -->\r\n    </set-header>\r\n    <jsonp callback-parameter-name=\"ProcessResponse\" />\r\n  </outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/echo-api/retrieve-resource-cached/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'echo-api', 'retrieve-resource-cached')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\">\r\n      <vary-by-header>Accept</vary-by-header>\r\n      <vary-by-header>Accept-Charset</vary-by-header>\r\n    </cache-lookup>\r\n    <rewrite-uri template=\"/resource\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <cache-store duration=\"3600\" />\r\n  </outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-qrcode-dev-cus-001/get-generateqrcode/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'func-qrcode-dev-cus-001', 'get-generateqrcode')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-qrcode-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-qrcode-dev-cus-001\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-qrcode-dev-cus-001/post-generateqrcode/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'func-qrcode-dev-cus-001', 'post-generateqrcode')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-qrcode-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-qrcode-dev-cus-001\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/get-generateqrcode/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001', 'get-generateqrcode')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-valmontmobileapp-dev-cus-001\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/get-getallbusinesssegments/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001', 'get-getallbusinesssegments')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-valmontmobileapp-dev-cus-001\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/get-getazureusers/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001', 'get-getazureusers')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-valmontmobileapp-dev-cus-001\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/get-getprofiledetailsfromstorage/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001', 'get-getprofiledetailsfromstorage')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-valmontmobileapp-dev-cus-001\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/post-generateqrcode/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001', 'post-generateqrcode')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-valmontmobileapp-dev-cus-001\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/post-getazureusers/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001', 'post-getazureusers')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-valmontmobileapp-dev-cus-001\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/post-getprofiledetailsfromstorage/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001', 'post-getprofiledetailsfromstorage')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-valmontmobileapp-dev-cus-001\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('apim_name'), '/func-valmontmobileapp-dev-cus-001/put-updateuserprofile/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001', 'put-updateuserprofile')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apim_name'), 'func-valmontmobileapp-dev-cus-001')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-valmontmobileapp-dev-cus-001\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        }

    ],
    "outputs": {
        "apim_name": {
        "type": "string",
        "value": "[variables('apim_name')]"
       }
    
    }

}